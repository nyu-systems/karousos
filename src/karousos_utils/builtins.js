"use strict";

/*******************************************************/
/* This file contains the names of all Node.js modules */
/*        we use and categorizes them                  */
/*******************************************************/

const assert = require('assert')
const assertStrict = require('assert').strict
const consoleMod = require('console')
const crypto = require('crypto')
const dns = require('dns')
const dnsPromises = require('dns').promises
const {
    EventEmitter,
    once
} = require('events')
const fs = require('fs')
const fsPromises = fs.promises
const os = require('os')
const path = require('path')
const querystring = require('querystring')
const rl = require('readline')
const repl = require('repl')
const stream = require('stream')
const stringdec = require('string_decoder')
const timers = require('timers')
const tty = require('tty')
const url = require('url')
const util = require('util')
const v8 = require('v8')
const vm = require('vm')
const zlib = require('zlib')
const http = require('http')
const http2 = require('http2')
const net = require('net')
const karousosClasses = require('./commonClasses')
const process = require('process')
const childProcess = require('child_process');
const express = require(process.env.EXPRESS_PATH);

// Prototypes of generator and async functions
var generatorFunction = Object.getPrototypeOf(function*() {})
var asyncFunction = Object.getPrototypeOf(async function() {})

// The names of all node.js modules we support
const nodeModules = new Set([
    'events',
    'fs',
    'assert',
    'os',
    'path',
    'assert',
    'console',
    'crypto',
    'dns',
    'path',
    'querystring',
    'readline',
    'repl',
    'stream',
    'string_decoder',
    'timers',
    'tty',
    'url',
    'util',
    'v8',
    'vm',
    'zlib',
    'http',
    'http2',
    'net',
    'process',
    'tls',
    'async_hooks',
    'child_process',
    'https',
    'cluster',
    'domain',
    'buffer'
])

exports.nodeModules = nodeModules;

// Methods of EventEmitter. Promises are also considered 
// Methods of event emitter
const EventEmitterMethods = new Set([
    Promise.prototype.then,
    Promise.prototype.catch,
    Promise.prototype.finally,
    EventEmitter.prototype.constructor,
    EventEmitter.prototype.on,
    EventEmitter.prototype.addListener,
    EventEmitter.prototype.prependListener,
    EventEmitter.prototype.once,
    EventEmitter.prototype.prependOnceListener,
    EventEmitter.prototype.once,
    EventEmitter.prototype.prependOnceListener,
    EventEmitter.prototype.off,
    EventEmitter.prototype.removeAllListeners,
    EventEmitter.prototype.removeListener,
    EventEmitter.prototype.removeAllListeners,
    EventEmitter.prototype.emit,
    EventEmitter.prototype.eventNames,
    EventEmitter.prototype.getMaxListeners,
    EventEmitter.prototype.listenerCount,
    EventEmitter.prototype.listeners,
    EventEmitter.prototype.setMaxListeners,
    EventEmitter.prototype.rawListeners,
    EventEmitter.prototype.myEmit,
])

exports.EventEmitterMethods = EventEmitterMethods;

// These are all native JS/Node.js functions that are deterministic and
// synchronous. Atomics, Intl, and WebAssembly are not supported
const detSyncCallToJsBuiltIn = new Set([
    process.cwd,
    isFinite,
    parseFloat,
    parseInt,
    decodeURI,
    decodeURIComponent,
    encodeURI,
    encodeURIComponent,
    escape,
    unescape,
    Object.assign,
    Object.create,
    Object.defineProperties,
    Object.defineProperty,
    Object.entries,
    Object.freeze,
    Object.fromEntries,
    Object.getOwnPropertyDescriptor,
    Object.getOwnPropertyDescriptors,
    Object.getOwnPropertyNames,
    Object.getOwnPropertySymbols,
    Object.getPrototypeOf,
    Object.is,
    Object.isExtensible,
    Object.isFrozen,
    Object.isSealed,
    Object.preventExtensions,
    Object.prototype.__defineGetter__,
    Object.prototype.__defineSetter__,
    Object.prototype.__lookupGetter__,
    Object.prototype.__lookupSetter__,
    Object.prototype.eval,
    Object.prototype.hasOwnProperty,
    Object.prototype.isPrototypeOf,
    Object.prototype.propertyIsEnumerable,
    Object.prototype.toLocaleString,
    Object.prototype.toSource,
    Object.prototype.toString,
    Object.prototype.unwatch,
    Object.prototype.valueOf,
    Object.prototype.watch,
    Object.seal,
    Object.setPrototypeOf,
    Object.unobserve,
    Object.values,
    Function.prototype.toSource,
    Function.prototype.toString,
    Boolean.prototype.constructor,
    Boolean.prototype.toString,
    Boolean.prototype.valueOf,
    Symbol.for,
    Symbol.keyFor,
    Symbol.prototype.toSource,
    Symbol.prototype.toString,
    Symbol.prototype.valueOf,
    Error.prototype.constructor,
    Error.prototype.toString,
    EvalError.prototype.constructor,
    EvalError.prototype.toString,
    RangeError.prototype.constructor,
    RangeError.prototype.toString,
    ReferenceError.prototype.constructor,
    ReferenceError.prototype.toString,
    SyntaxError.prototype.constructor,
    SyntaxError.prototype.toString,
    TypeError.prototype.constructor,
    TypeError.prototype.toString,
    URIError.prototype.constructor,
    URIError.prototype.toString,
    Number.prototype.constructor,
    Number.isFinite,
    Number.isInteger,
    Number.isNaN,
    Number.isSafeInteger,
    Number.parseFloat,
    Number.parseInt,
    Number.prototype.toExponential,
    Number.prototype.toFixed,
    Number.prototype.toLocaleString,
    Number.prototype.toPrecision,
    Number.prototype.toSource,
    Number.prototype.toString,
    Number.prototype.valueOf,
    BigInt.prototype.constructor,
    BigInt.asIntN,
    BigInt.asUintN,
    BigInt.prototype.toLocaleString,
    BigInt.prototype.toString,
    BigInt.prototype.valueOf,
    Math.abs,
    Math.acos,
    Math.acosh,
    Math.asin,
    Math.asinh,
    Math.atan,
    Math.atan2,
    Math.atanh,
    Math.cbrt,
    Math.ceil,
    Math.clz32,
    Math.cos,
    Math.cosh,
    Math.exp,
    Math.expm1,
    Math.floor,
    Math.fround,
    Math.hypot,
    Math.imul,
    Math.log,
    Math.log10,
    Math.log1p,
    Math.log2,
    Math.max,
    Math.min,
    Math.pow,
    Math.round,
    Math.sign,
    Math.sin,
    Math.sinh,
    Math.sqrt,
    Math.tan,
    Math.tanh,
    Math.trunc,
    Date.UTC,
    Date.parse,
    Date.prototype.getDate,
    Date.prototype.getDay,
    Date.prototype.getFullYear,
    Date.prototype.getHours,
    Date.prototype.getMilliseconds,
    Date.prototype.getMinutes,
    Date.prototype.getMonth,
    Date.prototype.getSeconds,
    Date.prototype.getTime,
    Date.prototype.getTimezoneOffset,
    Date.prototype.getUTCDate,
    Date.prototype.getUTCDay,
    Date.prototype.getUTCFullYear,
    Date.prototype.getUTCHours,
    Date.prototype.getUTCMilliseconds,
    Date.prototype.getUTCMinutes,
    Date.prototype.getUTCMonth,
    Date.prototype.getUTCSeconds,
    Date.prototype.getYear,
    Date.prototype.setDate,
    Date.prototype.setFullYear,
    Date.prototype.setHours,
    Date.prototype.setMilliseconds,
    Date.prototype.setMinutes,
    Date.prototype.setMonth,
    Date.prototype.setSeconds,
    Date.prototype.setTime,
    Date.prototype.setUTCDate,
    Date.prototype.setUTCFullYear,
    Date.prototype.setUTCHours,
    Date.prototype.setUTCMilliseconds,
    Date.prototype.setUTCMinutes,
    Date.prototype.setUTCMonth,
    Date.prototype.setUTCSeconds,
    Date.prototype.setYear,
    Date.prototype.toDateString,
    Date.prototype.toGMTString,
    Date.prototype.toISOString,
    Date.prototype.toJSON,
    Date.prototype.toLocaleDateString,
    Date.prototype.toLocaleFormat,
    Date.prototype.toLocaleString,
    Date.prototype.toLocaleTimeString,
    Date.prototype.toSource,
    Date.prototype.toString,
    Date.prototype.toTimeString,
    Date.prototype.toUTCString,
    Date.prototype.valueOf,
    String.prototype.constructor,
    String.fromCharCode,
    String.fromCodePoint,
    String.prototype.anchor,
    String.prototype.big,
    String.prototype.blink,
    String.prototype.bold,
    String.prototype.charAt,
    String.prototype.charCodeAt,
    String.prototype.codePointAt,
    String.prototype.concat,
    String.prototype.endsWith,
    String.prototype.fixed,
    String.prototype.fontcolor,
    String.prototype.fontsize,
    String.prototype.includes,
    String.prototype.indexOf,
    String.prototype.italics,
    String.prototype.lastIndexOf,
    String.prototype.link,
    String.prototype.localeCompare,
    String.prototype.match,
    String.prototype.matchAll,
    String.prototype.normalize,
    String.prototype.padEnd,
    String.prototype.padStart,
    String.prototype.quote,
    String.prototype.repeat,
    String.prototype.search,
    String.prototype.slice,
    String.prototype.small,
    String.prototype.split,
    String.prototype.startsWith,
    String.prototype.strike,
    String.prototype.sub,
    String.prototype.substr,
    String.prototype.substring,
    String.prototype.sup,
    String.prototype.toLocaleLowerCase,
    String.prototype.toLocaleUpperCase,
    String.prototype.toLowerCase,
    String.prototype.toSource,
    String.prototype.toString,
    String.prototype.toUpperCase,
    String.prototype.trim,
    String.prototype.trimEnd,
    String.prototype.trimStart,
    String.prototype.valueOf,
    String.raw,
    RegExp.prototype.constructor,
    RegExp.prototype.compile,
    RegExp.prototype.exec,
    RegExp.prototype.test,
    RegExp.prototype.toSource,
    RegExp.prototype.toString,
    Array.prototype.constructor,
    Array.from,
    Array.isArray,
    Array.of,
    Array.prototype.concat,
    Array.prototype.copyWithin,
    Array.prototype.entries,
    Array.prototype.fill,
    Array.prototype.flat,
    Array.prototype.includes,
    Array.prototype.indexOf,
    Array.prototype.join,
    Array.prototype.keys,
    Array.prototype.lastIndexOf,
    Array.prototype.pop,
    Array.prototype.push,
    Array.prototype.reverse,
    Array.prototype.shift,
    Array.prototype.slice,
    Array.prototype.splice,
    Array.prototype.toLocaleString,
    Array.prototype.toSource,
    Array.prototype.toString,
    Array.prototype.unshift,
    Array.prototype.values,
    Int8Array.prototype.constructor,
    Int8Array.from,
    Int8Array.of,
    Int8Array.prototype.copyWithin,
    Int8Array.prototype.entries,
    Int8Array.prototype.fill,
    Int8Array.prototype.find,
    Int8Array.prototype.findIndex,
    Int8Array.prototype.includes,
    Int8Array.prototype.indexOf,
    Int8Array.prototype.join,
    Int8Array.prototype.keys,
    Int8Array.prototype.lastIndexOf,
    Int8Array.prototype.move,
    Int8Array.prototype.reverse,
    Int8Array.prototype.set,
    Int8Array.prototype.slice,
    Int8Array.prototype.sort,
    Int8Array.prototype.subarray,
    Int8Array.prototype.toLocaleString,
    Int8Array.prototype.toString,
    Int8Array.prototype.values,
    Uint8Array.prototype.constructor,
    Uint8Array.from,
    Uint8Array.of,
    Uint8Array.prototype.copyWithin,
    Uint8Array.prototype.entries,
    Uint8Array.prototype.fill,
    Uint8Array.prototype.find,
    Uint8Array.prototype.findIndex,
    Uint8Array.prototype.includes,
    Uint8Array.prototype.indexOf,
    Uint8Array.prototype.join,
    Uint8Array.prototype.keys,
    Uint8Array.prototype.lastIndexOf,
    Uint8Array.prototype.move,
    Uint8Array.prototype.reverse,
    Uint8Array.prototype.set,
    Uint8Array.prototype.slice,
    Uint8Array.prototype.sort,
    Uint8Array.prototype.subarray,
    Uint8Array.prototype.toLocaleString,
    Uint8Array.prototype.toString,
    Uint8Array.prototype.values,
    Uint8ClampedArray.prototype.constructor,
    Uint8ClampedArray.from,
    Uint8ClampedArray.of,
    Uint8ClampedArray.prototype.copyWithin,
    Uint8ClampedArray.prototype.entries,
    Uint8ClampedArray.prototype.fill,
    Uint8ClampedArray.prototype.find,
    Uint8ClampedArray.prototype.findIndex,
    Uint8ClampedArray.prototype.includes,
    Uint8ClampedArray.prototype.indexOf,
    Uint8ClampedArray.prototype.join,
    Uint8ClampedArray.prototype.keys,
    Uint8ClampedArray.prototype.lastIndexOf,
    Uint8ClampedArray.prototype.move,
    Uint8ClampedArray.prototype.reverse,
    Uint8ClampedArray.prototype.set,
    Uint8ClampedArray.prototype.slice,
    Uint8ClampedArray.prototype.sort,
    Uint8ClampedArray.prototype.subarray,
    Uint8ClampedArray.prototype.toLocaleString,
    Uint8ClampedArray.prototype.toString,
    Uint8ClampedArray.prototype.values,
    Int16Array.prototype.constructor,
    Int16Array.from,
    Int16Array.of,
    Int16Array.prototype.copyWithin,
    Int16Array.prototype.entries,
    Int16Array.prototype.fill,
    Int16Array.prototype.find,
    Int16Array.prototype.findIndex,
    Int16Array.prototype.includes,
    Int16Array.prototype.indexOf,
    Int16Array.prototype.join,
    Int16Array.prototype.keys,
    Int16Array.prototype.lastIndexOf,
    Int16Array.prototype.move,
    Int16Array.prototype.reverse,
    Int16Array.prototype.set,
    Int16Array.prototype.slice,
    Int16Array.prototype.sort,
    Int16Array.prototype.subarray,
    Int16Array.prototype.toLocaleString,
    Int16Array.prototype.toString,
    Int16Array.prototype.values,
    Uint16Array.prototype.constructor,
    Uint16Array.from,
    Uint16Array.of,
    Uint16Array.prototype.copyWithin,
    Uint16Array.prototype.entries,
    Uint16Array.prototype.fill,
    Uint16Array.prototype.find,
    Uint16Array.prototype.findIndex,
    Uint16Array.prototype.includes,
    Uint16Array.prototype.indexOf,
    Uint16Array.prototype.join,
    Uint16Array.prototype.keys,
    Uint16Array.prototype.lastIndexOf,
    Uint16Array.prototype.move,
    Uint16Array.prototype.reverse,
    Uint16Array.prototype.set,
    Uint16Array.prototype.slice,
    Uint16Array.prototype.sort,
    Uint16Array.prototype.subarray,
    Uint16Array.prototype.toLocaleString,
    Uint16Array.prototype.toString,
    Uint16Array.prototype.values,
    Int32Array.prototype.constructor,
    Int32Array.from,
    Int32Array.of,
    Int32Array.prototype.copyWithin,
    Int32Array.prototype.entries,
    Int32Array.prototype.fill,
    Int32Array.prototype.find,
    Int32Array.prototype.findIndex,
    Int32Array.prototype.includes,
    Int32Array.prototype.indexOf,
    Int32Array.prototype.join,
    Int32Array.prototype.keys,
    Int32Array.prototype.lastIndexOf,
    Int32Array.prototype.move,
    Int32Array.prototype.reverse,
    Int32Array.prototype.set,
    Int32Array.prototype.slice,
    Int32Array.prototype.sort,
    Int32Array.prototype.subarray,
    Int32Array.prototype.toLocaleString,
    Int32Array.prototype.toString,
    Int32Array.prototype.values,
    Uint32Array.prototype.constructor,
    Uint32Array.from,
    Uint32Array.of,
    Uint32Array.prototype.copyWithin,
    Uint32Array.prototype.entries,
    Uint32Array.prototype.fill,
    Uint32Array.prototype.find,
    Uint32Array.prototype.findIndex,
    Uint32Array.prototype.includes,
    Uint32Array.prototype.indexOf,
    Uint32Array.prototype.join,
    Uint32Array.prototype.keys,
    Uint32Array.prototype.lastIndexOf,
    Uint32Array.prototype.move,
    Uint32Array.prototype.reverse,
    Uint32Array.prototype.set,
    Uint32Array.prototype.slice,
    Uint32Array.prototype.sort,
    Uint32Array.prototype.subarray,
    Uint32Array.prototype.toLocaleString,
    Uint32Array.prototype.toString,
    Uint32Array.prototype.values,
    Float32Array.prototype.constructor,
    Float32Array.from,
    Float32Array.of,
    Float32Array.prototype.copyWithin,
    Float32Array.prototype.entries,
    Float32Array.prototype.fill,
    Float32Array.prototype.find,
    Float32Array.prototype.findIndex,
    Float32Array.prototype.includes,
    Float32Array.prototype.indexOf,
    Float32Array.prototype.join,
    Float32Array.prototype.keys,
    Float32Array.prototype.lastIndexOf,
    Float32Array.prototype.move,
    Float32Array.prototype.reverse,
    Float32Array.prototype.set,
    Float32Array.prototype.slice,
    Float32Array.prototype.sort,
    Float32Array.prototype.subarray,
    Float32Array.prototype.toLocaleString,
    Float32Array.prototype.toString,
    Float32Array.prototype.values,
    Float64Array.prototype.constructor,
    Float64Array.from,
    Float64Array.of,
    Float64Array.prototype.copyWithin,
    Float64Array.prototype.entries,
    Float64Array.prototype.fill,
    Float64Array.prototype.find,
    Float64Array.prototype.findIndex,
    Float64Array.prototype.includes,
    Float64Array.prototype.indexOf,
    Float64Array.prototype.join,
    Float64Array.prototype.keys,
    Float64Array.prototype.lastIndexOf,
    Float64Array.prototype.move,
    Float64Array.prototype.reverse,
    Float64Array.prototype.set,
    Float64Array.prototype.slice,
    Float64Array.prototype.sort,
    Float64Array.prototype.subarray,
    Float64Array.prototype.toLocaleString,
    Float64Array.prototype.toString,
    Float64Array.prototype.values,
    BigInt64Array.prototype.constructor,
    BigInt64Array.from,
    BigInt64Array.of,
    BigInt64Array.prototype.copyWithin,
    BigInt64Array.prototype.entries,
    BigInt64Array.prototype.fill,
    BigInt64Array.prototype.find,
    BigInt64Array.prototype.findIndex,
    BigInt64Array.prototype.includes,
    BigInt64Array.prototype.indexOf,
    BigInt64Array.prototype.join,
    BigInt64Array.prototype.keys,
    BigInt64Array.prototype.lastIndexOf,
    BigInt64Array.prototype.move,
    BigInt64Array.prototype.reverse,
    BigInt64Array.prototype.set,
    BigInt64Array.prototype.slice,
    BigInt64Array.prototype.sort,
    BigInt64Array.prototype.subarray,
    BigInt64Array.prototype.toLocaleString,
    BigInt64Array.prototype.toString,
    BigInt64Array.prototype.values,
    BigUint64Array.prototype.constructor,
    BigUint64Array.from,
    BigUint64Array.of,
    BigUint64Array.prototype.copyWithin,
    BigUint64Array.prototype.entries,
    BigUint64Array.prototype.fill,
    BigUint64Array.prototype.find,
    BigUint64Array.prototype.findIndex,
    BigUint64Array.prototype.includes,
    BigUint64Array.prototype.indexOf,
    BigUint64Array.prototype.join,
    BigUint64Array.prototype.keys,
    BigUint64Array.prototype.lastIndexOf,
    BigUint64Array.prototype.move,
    BigUint64Array.prototype.reverse,
    BigUint64Array.prototype.set,
    BigUint64Array.prototype.slice,
    BigUint64Array.prototype.sort,
    BigUint64Array.prototype.subarray,
    BigUint64Array.prototype.toLocaleString,
    BigUint64Array.prototype.toString,
    BigUint64Array.prototype.values,
    Map.prototype.constructor,
    Map.prototype.clear,
    Map.prototype.delete,
    Map.prototype.entries,
    Map.prototype.get,
    Map.prototype.has,
    Map.prototype.keys,
    Map.prototype.set,
    Map.prototype.values,
    Set.prototype.constructor,
    Set.prototype.add,
    Set.prototype.clear,
    Set.prototype.delete,
    Set.prototype.entries,
    Set.prototype.has,
    Set.prototype.values,
    WeakMap.prototype.constructor,
    WeakMap.prototype.delete,
    WeakMap.prototype.get,
    WeakMap.prototype.has,
    WeakMap.prototype.set,
    WeakSet.prototype.constructor,
    WeakSet.prototype.add,
    WeakSet.prototype.delete,
    WeakSet.prototype.has,
    ArrayBuffer.prototype.constructor,
    ArrayBuffer.isView,
    ArrayBuffer.prototype.slice,
    ArrayBuffer.transfer,
    SharedArrayBuffer.prototype.constructor,
    SharedArrayBuffer.prototype.slice,
    DataView.prototype.constructor,
    DataView.prototype.getBigInt64,
    DataView.prototype.getBigUint64,
    DataView.prototype.getFloat32,
    DataView.prototype.getFloat64,
    DataView.prototype.getInt16,
    DataView.prototype.getInt32,
    DataView.prototype.getInt8,
    DataView.prototype.getUint16,
    DataView.prototype.getUint32,
    DataView.prototype.getUint8,
    DataView.prototype.setBigInt64,
    DataView.prototype.setBigUint64,
    DataView.prototype.setFloat32,
    DataView.prototype.setFloat64,
    DataView.prototype.setInt16,
    DataView.prototype.setInt32,
    DataView.prototype.setInt8,
    DataView.prototype.setUint16,
    DataView.prototype.setUint32,
    DataView.prototype.setUint8,
    Reflect.defineProperty,
    Reflect.deleteProperty,
    Reflect.enumerate,
    Reflect.get,
    Reflect.getOwnPropertyDescriptor,
    Reflect.getPrototypeOf,
    Reflect.has,
    Reflect.isExtensible,
    Reflect.ownKeys,
    Reflect.preventExtensions,
    Reflect.set,
    Reflect.setPrototypeOf,
    Proxy,
    JSON.parse,
    JSON.stringify,
    generatorFunction.prototype.return,
    generatorFunction.prototype.throw,

    //assert module

    assert,
    assertStrict,
    assert.deepEqual,
    assertStrict.deepEqual,
    assert.deepStrictEqual,
    assert.equal,
    assertStrict.equal,
    assert.fail,
    assertStrict.fail,
    assert.ifError,
    assertStrict.ifError,
    assert.notDeepEqual,
    assertStrict.notDeepEqual,
    assert.notDeepStrictEqual,
    assert.notEqual,
    assertStrict.notEqual,
    assert.notStrictEqual,
    assert.ok,
    assertStrict.ok,
    assert.strictEqual,

    //Buffer
    Buffer.alloc,
    Buffer.allocUnsafe,
    Buffer.allocUnsafeSlow,
    Buffer.byteLength,
    Buffer.compare,
    Buffer.concat,
    Buffer.from,
    Buffer.isBuffer,
    Buffer.isEncoding,
    Buffer.prototype.compare,
    Buffer.prototype.copy,
    Buffer.prototype.entries,
    Buffer.prototype.equals,
    Buffer.prototype.fill,
    Buffer.prototype.includes,
    Buffer.prototype.indexOf,
    Buffer.prototype.keys,
    Buffer.prototype.lastIndexOf,
    Buffer.prototype.readBigInt64BE,
    Buffer.prototype.readBigInt64LE,
    Buffer.prototype.readBigUInt64BE,
    Buffer.prototype.readBigUInt64LE,
    Buffer.prototype.readDoubleBE,
    Buffer.prototype.readDoubleLE,
    Buffer.prototype.readFloatBE,
    Buffer.prototype.readFloatLE,
    Buffer.prototype.readInt8,
    Buffer.prototype.readInt16BE,
    Buffer.prototype.readInt16LE,
    Buffer.prototype.readInt32BE,
    Buffer.prototype.readInt32LE,
    Buffer.prototype.readIntBE,
    Buffer.prototype.readIntLE,
    Buffer.prototype.readUInt8,
    Buffer.prototype.readUInt16BE,
    Buffer.prototype.readUInt16LE,
    Buffer.prototype.readUInt32BE,
    Buffer.prototype.readUInt32LE,
    Buffer.prototype.readUIntBE,
    Buffer.prototype.readUIntLE,
    Buffer.prototype.subarray,
    Buffer.prototype.slice,
    Buffer.prototype.swap16,
    Buffer.prototype.swap32,
    Buffer.prototype.swap64,
    Buffer.prototype.toJSON,
    Buffer.prototype.toString,
    Buffer.prototype.values,
    Buffer.prototype.write,
    Buffer.prototype.writeBigInt64BE,
    Buffer.prototype.writeBigInt64LE,
    Buffer.prototype.writeBigUInt64BE,
    Buffer.prototype.writeBigUInt64LE,
    Buffer.prototype.writeDoubleBE,
    Buffer.prototype.writeDoubleLE,
    Buffer.prototype.writeFloatBE,
    Buffer.prototype.writeFloatLE,
    Buffer.prototype.writeInt8,
    Buffer.prototype.writeInt16BE,
    Buffer.prototype.writeInt16LE,
    Buffer.prototype.writeInt32BE,
    Buffer.prototype.writeInt32LE,
    Buffer.prototype.writeIntBE,
    Buffer.prototype.writeIntLE,
    Buffer.prototype.writeUInt8,
    Buffer.prototype.writeUInt16BE,
    Buffer.prototype.writeUInt16LE,
    Buffer.prototype.writeUInt32BE,
    Buffer.prototype.writeUInt32LE,
    Buffer.prototype.writeUIntBE,
    Buffer.prototype.writeUIntLE,
    Buffer.transcode,

    //child_proess is considered deprecated as well as cluster....

    //console

    consoleMod.Console.prototype.constructor,
    consoleMod.assert,
    consoleMod.clear,
    consoleMod.count,
    consoleMod.countReset,
    consoleMod.debug,
    consoleMod.dir,
    consoleMod.dirxml,
    consoleMod.error,
    consoleMod.group,
    consoleMod.groupCollapsed,
    consoleMod.groupEnd,
    consoleMod.info,
    consoleMod.log,
    consoleMod.table,
    consoleMod.time,
    consoleMod.timeEnd,
    consoleMod.timeLog,
    consoleMod.trace,
    consoleMod.warn,
    consoleMod.markTimeline,
    consoleMod.profile,
    consoleMod.profileEnd,
    consoleMod.timeStamp,
    consoleMod.timeline,
    consoleMod.timelineEnd,
    consoleMod.Console.prototype.assert,
    consoleMod.Console.prototype.clear,
    consoleMod.Console.prototype.count,
    consoleMod.Console.prototype.countReset,
    consoleMod.Console.prototype.debug,
    consoleMod.Console.prototype.dir,
    consoleMod.Console.prototype.dirxml,
    consoleMod.Console.prototype.error,
    consoleMod.Console.prototype.group,
    consoleMod.Console.prototype.groupCollapsed,
    consoleMod.Console.prototype.groupEnd,
    consoleMod.Console.prototype.info,
    consoleMod.Console.prototype.log,
    consoleMod.Console.prototype.table,
    consoleMod.Console.prototype.time,
    consoleMod.Console.prototype.timeEnd,
    consoleMod.Console.prototype.timeLog,
    consoleMod.Console.prototype.trace,
    consoleMod.Console.prototype.warn,
    consoleMod.Console.prototype.markTimeline,
    consoleMod.Console.prototype.profile,
    consoleMod.Console.prototype.profileEnd,
    consoleMod.Console.prototype.timeStamp,
    consoleMod.Console.prototype.timeline,
    consoleMod.Console.prototype.timelineEnd,

    //crypto

    crypto.Certificate.exportChallenge,
    crypto.Certificate.exportPublicKey,
    crypto.Certificate.verifySpkac,
    crypto.Certificate.prototype.constructor,
    crypto.Certificate.prototype.exportChallenge,
    crypto.Certificate.prototype.exportPublicKey,
    crypto.Certificate.prototype.verifySpkac,
    crypto.Cipher.prototype.final,
    crypto.Cipher.prototype.setAAD,
    crypto.Cipher.prototype.setAAD,
    crypto.Cipher.prototype.getAuthTag,
    crypto.Cipher.prototype.setAutoPadding,
    crypto.Cipher.prototype.update,
    crypto.Decipher.prototype.final,
    crypto.Decipher.prototype.setAAD,
    crypto.Decipher.prototype.setAuthTag,
    crypto.Decipher.prototype.setAutoPadding,
    crypto.Decipher.prototype.update,
    crypto.DiffieHellman.prototype.computeSecret,
    crypto.DiffieHellman.prototype.generateKeys,
    crypto.DiffieHellman.prototype.getGenerator,
    crypto.DiffieHellman.prototype.getPrime,
    crypto.DiffieHellman.prototype.getPrivateKey,
    crypto.DiffieHellman.prototype.getPublicKey,
    crypto.DiffieHellman.prototype.setPrivateKey,
    crypto.DiffieHellman.prototype.setPublicKey,
    crypto.DiffieHellmanGroup.prototype.computeSecret,
    crypto.DiffieHellmanGroup.prototype.generateKeys,
    crypto.DiffieHellmanGroup.prototype.getGenerator,
    crypto.DiffieHellmanGroup.prototype.getPrime,
    crypto.DiffieHellmanGroup.prototype.getPrivateKey,
    crypto.DiffieHellmanGroup.prototype.getPublicKey,
    crypto.DiffieHellmanGroup.prototype.setPrivateKey,
    crypto.DiffieHellmanGroup.prototype.setPublicKey,
    crypto.ECDH.prototype.convertKey,
    crypto.ECDH.prototype.computeSecret,
    crypto.ECDH.prototype.generateKeys,
    crypto.ECDH.prototype.getPrivateKey,
    crypto.ECDH.prototype.getPublicKey,
    crypto.ECDH.prototype.setPrivateKey,
    crypto.Hash.prototype.digest,
    crypto.Hash.prototype.update,
    crypto.Hmac.prototype.digest,
    crypto.Hmac.prototype.update,
    crypto.KeyObject.prototype.export,
    crypto.Sign.prototype.sign,
    crypto.Sign.prototype.update,
    crypto.Verify.prototype.update,
    crypto.Verify.prototype.verify,
    crypto.createCipheriv,
    crypto.createDecipheriv,
    crypto.createDiffieHellman,
    crypto.createDiffieHellman,
    crypto.createDiffieHellmanGroup,
    crypto.createECDH,
    crypto.createHash,
    crypto.createHmac,
    crypto.createPrivateKey,
    crypto.createPublicKey,
    crypto.createSecretKey,
    crypto.createSign,
    crypto.createVerify,
    crypto.generateKeyPairSync,
    crypto.getCiphers,
    crypto.getCurves,
    crypto.getDiffieHellman,
    crypto.getFips,
    crypto.getHashes,
    crypto.pbkdf2Sync,
    crypto.privateDecrypt,
    crypto.privateEncrypt,
    crypto.publicDecrypt,
    crypto.publicEncrypt,
    crypto.scryptSync,
    crypto.setEngine,
    crypto.setFips,
    crypto.sign,
    crypto.timingSafeEqual,
    crypto.verify,

    //DNS
    dns.Resolver.prototype.cancel,
    dns.Resolver.getServers,
    dns.Resolver.setServers,
    dns.getServers,
    dns.setServers,
    dnsPromises.Resolver.prototype.constructor,
    dnsPromises.Resolver.prototype.getServers,
    dnsPromises.Resolver.prototype.setServers,

    //Error
    Error.prototype.constructor,
    Error.captureStackTrace,
    RangeError.prototype.constructor,
    ReferenceError.prototype.constructor,
    SyntaxError.prototype.constructor,
    TypeError.prototype.constructor,

    //events
    EventEmitter.prototype.constructor,

    //fs
    fs.Dirent.prototype.isBlockDevice,
    fs.Dirent.prototype.isCharacterDevice,
    fs.Dirent.prototype.isDirectory,
    fs.Dirent.prototype.isFIFO,
    fs.Dirent.prototype.isFile,
    fs.Dirent.prototype.isSocket,
    fs.Dirent.prototype.isSymbolicLink,
    fs.Stats.prototype.isBlockDevice,
    fs.Stats.prototype.isCharacterDevice,
    fs.Stats.prototype.isDirectory,
    fs.Stats.prototype.isFIFO,
    fs.Stats.prototype.isFile,
    fs.Stats.prototype.isSocket,
    fs.Stats.prototype.isSymbolicLink,
    fs.accessSync,
    fs.appendFileSync,
    fs.chmodSync,
    fs.chownSync,
    fs.closeSync,
    fs.copyFileSync,
    fs.createReadStream,
    fs.createWriteStream,
    fs.existsSync,
    fs.fchmodSync,
    fs.fchownSync,
    fs.fdatasyncSync,
    fs.fstatSync,
    fs.ftruncateSync,
    fs.fsyncSync,
    fs.futimesSync,
    fs.lchmodSync,
    fs.lchownSync,
    fs.linkSync,
    fs.lstatSync,
    fs.mkdirSync,
    fs.mkdtempSync,
    fs.openSync,
    fs.readSync,
    fs.readdirSync,
    fs.readFileSync,
    fs.readlinkSync,
    fs.realpathSync,
    fs.realpathSync.native,
    fs.renameSync,
    fs.rmdirSync,
    fs.statSync,
    fs.symlinkSync,
    fs.truncateSync,
    fs.unlinkSync,
    fs.utimesSync,
    fs.writeFileSync,
    fs.writeSync,

    //path module
    path.basename,
    path.dirname,
    path.extname,
    path.format,
    path.isAbsolute,
    path.join,
    path.normalize,
    path.parse,
    path.relative,
    path.resolve,
    path.toNamespacedPath,

    //process module
    process.abort,
    process.emitWarning,
    process.exit,

    //querystring
    querystring.decode,
    querystring.encode,
    querystring.escape,
    querystring.parse,
    querystring.stringify,
    querystring.unescape,

    //readline
    rl.Interface.prototype.close,
    rl.Interface.prototype.pause,
    rl.Interface.prototype.prompt,
    rl.Interface.prototype.resume,
    rl.Interface.prototype.setPrompt,
    rl.Interface.prototype.write,
    rl.createInterface,
    rl.emitKeypressEvents,

    //repl
    repl.REPLServer.prototype.defineCommand,
    repl.REPLServer.prototype.displayPrompt,
    repl.REPLServer.prototype.clearBufferedCommand,
    repl.start,

    //stream
    stream.Writable.prototype.cork,
    stream.Writable.prototype.destroy,
    stream.Writable.prototype.setDefaultEncoding,
    stream.Writable.prototype.uncork,
    stream.Readable.prototype.destroy,
    stream.Readable.prototype.isPaused,
    stream.Readable.prototype.pause,
    stream.Readable.prototype.pipe,
    stream.Readable.prototype.read,
    stream.Readable.prototype.resume,
    stream.Readable.prototype.setEncoding,
    stream.Readable.prototype.unpipe,
    stream.Readable.prototype.unshift,
    stream.Readable.prototype.wrap,
    stream.Transform.prototype.destroy,
    stream.Readable.from,
    stream.Writable.prototype.constructor,
    stream.Readable.prototype.constructor,
    stream.Readable.prototype._read,
    stream.Readable.prototype.push,
    stream.Duplex.prototype.constructor,
    stream.Transform.prototype.constructor,
    stream.Stream,
    stream.Stream.Writable.prototype.cork,
    stream.Stream.Writable.prototype.destroy,
    stream.Stream.Writable.prototype.setDefaultEncoding,
    stream.Stream.Writable.prototype.uncork,
    stream.Stream.Readable.prototype.destroy,
    stream.Stream.Readable.prototype.isPaused,
    stream.Stream.Readable.prototype.pause,
    stream.Stream.Readable.prototype.pipe,
    stream.Stream.Readable.prototype.read,
    stream.Stream.Readable.prototype.resume,
    stream.Stream.Readable.prototype.setEncoding,
    stream.Stream.Readable.prototype.unpipe,
    stream.Stream.Readable.prototype.unshift,
    stream.Stream.Readable.prototype.wrap,
    stream.Stream.Transform.prototype.destroy,
    stream.Stream.Readable.from,
    stream.Stream.Writable.prototype.constructor,
    stream.Stream.Readable.prototype.constructor,
    stream.Stream.Readable.prototype._read,
    stream.Stream.Readable.prototype.push,
    stream.Stream.Duplex.prototype.constructor,
    stream.Stream.Transform.prototype.constructor,

    //string decoder
    stringdec.StringDecoder.prototype.constructor,
    stringdec.StringDecoder.prototype.end,
    stringdec.StringDecoder.prototype.write,

    //timers
    //timers.Immediate.prototype.hasRef,
    //timers.Immediate.prototype.ref,
    //timers.Immediate.prototype.unref,
    //timers.Timeout.prototype.hasRef,
    //timers.Immediate.prototype.ref,
    //timers.Immediate.prototype.refresh,
    //timers.Timeout.unref,	

    //tty
    tty.ReadStream.prototype.setRawMode,
    tty.WriteStream.prototype.getColorDepth,
    tty.WriteStream.prototype.getWindowSize,
    tty.WriteStream.prototype.hasColors,
    tty.isatty,

    //url
    url.URL.prototype.constructor,
    url.URL.prototype.toString,
    url.URL.prototype.toJSON,
    url.URLSearchParams.prototype.constructor,
    url.URLSearchParams.prototype.append,
    url.URLSearchParams.prototype.delete,
    url.URLSearchParams.prototype.entries,
    url.URLSearchParams.prototype.get,
    url.URLSearchParams.prototype.getAll,
    url.URLSearchParams.prototype.has,
    url.URLSearchParams.prototype.keys,
    url.URLSearchParams.prototype.set,
    url.URLSearchParams.prototype.sort,
    url.URLSearchParams.prototype.toString,
    url.URLSearchParams.prototype.values,
    url.domainToASCII,
    url.domainToUnicode,
    url.fileURLToPath,
    url.format,
    url.pathToFileURL,

    //net 
    net.Socket.prototype.setKeepAlive,

    //util
    util.debuglog,
    util.deprecate,
    util.format,
    util.formatWithOptions,
    util.getSystemErrorName,
    util.inspect,
    util.inherits,
    util.isDeepStrictEqual,
    util.TextDecoder.prototype.contstructor,
    util.decode,
    util.TextEncoder.prototype.constructor,
    util.encode,
    util.types.isAnyArrayBuffer,
    util.types.isArgumentsObject,
    util.types.isArrayBuffer,
    util.types.isAsyncFunction,
    util.types.isBigInt64Array,
    util.types.isBigUint64Array,
    util.types.isBooleanObject,
    util.types.isBoxedPrimitive,
    util.types.isDataView,
    util.types.isDate,
    util.types.isExternal,
    util.types.isFloat32Array,
    util.types.isFloat64Array,
    util.types.isGeneratorFunction,
    util.types.isGeneratorObject,
    util.types.isInt8Array,
    util.types.isInt16Array,
    util.types.isInt32Array,
    util.types.isMap,
    util.types.isMapIterator,
    util.types.isModuleNamespaceObject,
    util.types.isNativeError,
    util.types.isNumberObject,
    util.types.isPromise,
    util.types.isProxy,
    util.types.isRegExp,
    util.types.isSet,
    util.types.isSetIterator,
    util.types.isSharedArrayBuffer,
    util.types.isStringObject,
    util.types.isSymbolObject,
    util.types.isTypedArray,
    util.types.isUint8Array,
    util.types.isUint8ClampedArray,
    util.types.isUint16Array,
    util.types.isUint32Array,
    util.types.isWeakMap,
    util.types.isWeakSet,
    util.types.isWebAssemblyCompiledModule,

    //v8
    v8.cachedDataVersionTag,
    v8.getHeapSpaceStatistics,
    v8.getHeapSnapshot,
    v8.getHeapStatistics,
    v8.setFlagsFromString,
    v8.writeHeapSnapshot,

    //vm
    vm.Script.prototype.constructor,
    vm.Script.prototype.createCachedData,
    vm.Script.prototype.runInContext,
    vm.Script.prototype.runInNewContext,
    vm.Script.prototype.runInThisContext,
    vm.compileFunction,
    vm.createContext,
    vm.isContext,
    vm.runInContext,
    vm.runInNewContext,
    vm.runInThisContext,

    //zlib
    zlib.reset,
    zlib.createBrotliCompress,
    zlib.createBrotliDecompress,
    zlib.createDeflate,
    zlib.createDeflateRaw,
    zlib.createGunzip,
    zlib.createGzip,
    zlib.createInflate,
    zlib.createInflateRaw,
    zlib.createUnzip,
    zlib.brotliCompressSync,
    zlib.brotliDecompressSync,
    zlib.deflateSync,
    zlib.deflateRawSync,
    zlib.gunzipSync,
    zlib.gzipSync,
    zlib.inflateSync,
    zlib.inflateRawSync,
    zlib.unzipSync,

    module.require,

    //Karousos classes 
    karousosClasses.register.prototype.toString,
    karousosClasses.objectID.prototype.toString,
    karousosClasses.handlerID.prototype.toString,
    karousosClasses.eventID.prototype.toString,
    karousosClasses.register.prototype.toString,
    karousosClasses.unregister.prototype.toString,
    karousosClasses.unregisterAll.prototype.toString,
    karousosClasses.emit.prototype.toString,
    karousosClasses.stateOp.prototype.toString,
    karousosClasses.nonDetOp.prototype.toString,
    karousosClasses.checkEvents.prototype.toString,

])

exports.detSyncCallToJsBuiltIn = detSyncCallToJsBuiltIn

// Non deterministic syncrhonous native functions
exports.nonDetSyncCallToJsBuiltIn = new Set([
    Math.random,
    Date.now,
    crypto.randomFillSync,
    Date.prototype.constructor,
])

// Deterministic synchronous native functions with callback
exports.detNodeBuiltInsWithCb = new Set([
    String.prototype.replace,
    //CRYPTO
    crypto.generateKeyPair,
    crypto.pbkdf2,
    //DNS
    dns.lookup,
    dns.lookupService,
    //fs
    fs.access,
    fs.appendFile,
    fs.chmod,
    fs.chown,
    fs.close,
    fs.copyFile,
    fs.fchmod,
    fs.fchown,
    fs.fdatasync,
    fs.fstat,
    fs.fsync,
    fs.ftruncate,
    fs.futimes,
    fs.lchmod,
    fs.lchown,
    fs.link,
    fs.lstat,
    fs.mkdir,
    fs.mkdtemp,
    fs.open,
    fs.read,
    fs.readdir,
    fs.readFile,
    fs.readlink,
    fs.realpath,
    fs.realpath.native,
    fs.rename,
    fs.rmdir,
    fs.stat,
    fs.symlink,
    fs.truncate,
    fs.unlink,
    fs.utimes,
    fs.write,
    fs.writeFile,
    //rl
    rl.Interface.prototype.question,
    rl.clearLine,
    rl.clearScreenDown,
    rl.cursorTo,
    rl.moveCursor,
    //repl
    repl.REPLServer.prototype.setupHistory,
    //stream	
    stream.Writable.prototype.end,
    stream.Writable.prototype.write,
    stream.finished,
    stream.pipeline,
    stream.Writable.prototype._write,
    stream.Writable.prototype._writev,
    stream.Writable.prototype._destroy,
    stream.Writable.prototype._final,
    stream.Readable.prototype._destroy,
    stream.Transform.prototype._flush,
    stream.Transform.prototype._transform,
    //tty
    tty.WriteStream.prototype.clearLine,
    tty.WriteStream.prototype.clearScreenDown,
    tty.WriteStream.prototype.cursorTo,
    //zlib
    zlib.close,
    zlib.flush,
    zlib.params,
    zlib.brotliCompress,
    zlib.brotliDecompress,
    zlib.deflate,
    zlib.deflateRaw,
    zlib.gunzip,
    zlib.gzip,
    zlib.inflate,
    zlib.inflateRaw,
    zlib.unzip,
    //globals
    queueMicrotask,
    //express
    express.application.listen,
])

// Non deterministic synchronous native functions with callback
exports.nonDetNodeBuiltInsWithCb = new Set([
    crypto.randomBytes,
    crypto.randomFill,
    crypto.scrypt,
    //DNS
    dns.resolve,
    dns.resolve4,
    dns.resolve6,
    dns.resolveAny,
    dns.resolveCname,
    dns.resolveMx,
    dns.resolveNaptr,
    dns.resolveNs,
    dns.resolvePtr,
    dns.resolveSoa,
    dns.resolveSrv,
    dns.resolveTxt,
    dns.reverse,
    dns.Resolver.prototype.resolve,
    dns.Resolver.prototype.resolve4,
    dns.Resolver.prototype.resolve6,
    dns.Resolver.prototype.resolveAny,
    dns.Resolver.prototype.resolveCname,
    dns.Resolver.prototype.resolveMx,
    dns.Resolver.prototype.resolveNaptr,
    dns.Resolver.prototype.resolveNs,
    dns.Resolver.prototype.resolvePtr,
    dns.Resolver.prototype.resolveSoa,
    dns.Resolver.prototype.resolveSrv,
    dns.Resolver.prototype.resolveTxt,
    dns.Resolver.prototype.reverse,
    // Net
    net.createConnection,
    net.connect
])

// Deterministic node builtins that return a promise
exports.detNodeBuiltInRetPromise = new Set([
    //DNS
    dnsPromises.lookup,
    dnsPromises.lookupService,
    fsPromises.access,
    fsPromises.appendFile,
    fsPromises.chmod,
    fsPromises.chown,
    fsPromises.copyFile,
    fsPromises.lchmod,
    fsPromises.lchown,
    fsPromises.link,
    fsPromises.lstat,
    fsPromises.mkdir,
    fsPromises.mkdtemp,
    fsPromises.open,
    fsPromises.readdir,
    fsPromises.readFile,
    fsPromises.readlink,
    fsPromises.realpath,
    fsPromises.rename,
    fsPromises.rmdir,
    fsPromises.stat,
    fsPromises.symlink,
    fsPromises.truncate,
    fsPromises.unlink,
    fsPromises.utimes,
    fsPromises.writeFile,
])

// Non deterministic node builtins that return a promise
exports.nonDetNodeBuiltInRetPromise = new Set([
    //DNS
    dnsPromises.resolve,
    dnsPromises.resolve4,
    dnsPromises.resolve6,
    dnsPromises.resolveAny,
    dnsPromises.resolveCname,
    dnsPromises.resolveMx,
    dnsPromises.resolveNaptr,
    dnsPromises.resolveNs,
    dnsPromises.resolvePtr,
    dnsPromises.resolveSoa,
    dnsPromises.resolveSrv,
    dnsPromises.resolveTxt,
    dnsPromises.reverse,
    dnsPromises.Resolver.prototype.resolve,
    dnsPromises.Resolver.prototype.resolve4,
    dnsPromises.Resolver.prototype.resolve6,
    dnsPromises.Resolver.prototype.resolveAny,
    dnsPromises.Resolver.prototype.resolveCname,
    dnsPromises.Resolver.prototype.resolveMx,
    dnsPromises.Resolver.prototype.resolveNaptr,
    dnsPromises.Resolver.prototype.resolveNs,
    dnsPromises.Resolver.prototype.resolvePtr,
    dnsPromises.Resolver.prototype.resolveSoa,
    dnsPromises.Resolver.prototype.resolveSrv,
    dnsPromises.Resolver.prototype.resolveTxt,
    dnsPromises.Resolver.prototype.reverse,
])


// The most frequently used deterministic synchronous calls to JS/Node.js built-ins
// When we want to determine the type of a call, we check these first for efficiency
const commonDetSyncCallToJsBuiltIn = new Set([
    process.cwd,
    isFinite,
    parseFloat,
    parseInt,
    decodeURI,
    decodeURIComponent,
    encodeURI,
    encodeURIComponent,
    escape,
    unescape,
    Object.assign,
    Object.create,
    Object.defineProperties,
    Object.defineProperty,
    Object.entries,
    Object.freeze,
    Object.fromEntries,
    Object.getOwnPropertyDescriptor,
    Object.getOwnPropertyDescriptors,
    Object.getOwnPropertyNames,
    Object.getOwnPropertySymbols,
    Object.getPrototypeOf,
    Object.is,
    Object.isExtensible,
    Object.isFrozen,
    Object.isSealed,
    Object.preventExtensions,
    Object.prototype.__defineGetter__,
    Object.prototype.__defineSetter__,
    Object.prototype.__lookupGetter__,
    Object.prototype.__lookupSetter__,
    Object.prototype.eval,
    Object.prototype.hasOwnProperty,
    Object.prototype.isPrototypeOf,
    Object.prototype.propertyIsEnumerable,
    Object.prototype.toLocaleString,
    Object.prototype.toSource,
    Object.prototype.toString,
    Object.prototype.unwatch,
    Object.prototype.valueOf,
    Object.prototype.watch,
    Object.seal,
    Object.setPrototypeOf,
    Object.unobserve,
    Object.values,
    Function.prototype.toSource,
    Function.prototype.toString,
    Boolean.prototype.constructor,
    Boolean.prototype.toString,
    Boolean.prototype.valueOf,
    Number.prototype.constructor,
    Number.isFinite,
    Number.isInteger,
    Number.isNaN,
    Number.isSafeInteger,
    Number.parseFloat,
    Number.parseInt,
    Number.prototype.toExponential,
    Number.prototype.toFixed,
    Number.prototype.toLocaleString,
    Number.prototype.toPrecision,
    Number.prototype.toSource,
    Number.prototype.toString,
    Number.prototype.valueOf,
    BigInt.prototype.constructor,
    BigInt.asIntN,
    BigInt.asUintN,
    BigInt.prototype.toLocaleString,
    BigInt.prototype.toString,
    BigInt.prototype.valueOf,
    Math.abs,
    Math.ceil,
    Math.floor,
    Math.fround,
    Math.log,
    Math.max,
    Math.min,
    Math.round,
    Date.parse,
    Date.prototype.getDate,
    Date.prototype.toISOString,
    Date.prototype.getDay,
    Date.prototype.getFullYear,
    Date.prototype.getHours,
    Date.prototype.getMilliseconds,
    Date.prototype.getMinutes,
    Date.prototype.getMonth,
    Date.prototype.getSeconds,
    Date.prototype.getTime,
    Date.prototype.getTimezoneOffset,
    Date.prototype.getYear,
    Date.prototype.setDate,
    Date.prototype.setFullYear,
    Date.prototype.setHours,
    Date.prototype.setMilliseconds,
    Date.prototype.setMinutes,
    Date.prototype.setMonth,
    Date.prototype.setSeconds,
    Date.prototype.setTime,
    Date.prototype.toJSON,
    Date.prototype.toSource,
    Date.prototype.toString,
    Date.prototype.valueOf,
    String.prototype.constructor,
    String.fromCharCode,
    String.fromCodePoint,
    String.prototype.charAt,
    String.prototype.charCodeAt,
    String.prototype.codePointAt,
    String.prototype.concat,
    String.prototype.endsWith,
    String.prototype.fixed,
    String.prototype.includes,
    String.prototype.indexOf,
    String.prototype.lastIndexOf,
    String.prototype.match,
    String.prototype.matchAll,
    String.prototype.search,
    String.prototype.slice,
    String.prototype.split,
    String.prototype.startsWith,
    String.prototype.substr,
    String.prototype.toLowerCase,
    String.prototype.toSource,
    String.prototype.toString,
    String.prototype.toUpperCase,
    String.prototype.trim,
    String.prototype.valueOf,
    String.raw,
    RegExp.prototype.constructor,
    RegExp.prototype.compile,
    RegExp.prototype.exec,
    RegExp.prototype.test,
    RegExp.prototype.toSource,
    RegExp.prototype.toString,
    Array.prototype.constructor,
    Array.from,
    Array.isArray,
    Array.of,
    Array.prototype.concat,
    Array.prototype.entries,
    Array.prototype.fill,
    Array.prototype.flat,
    Array.prototype.includes,
    Array.prototype.indexOf,
    Array.prototype.join,
    Array.prototype.keys,
    Array.prototype.lastIndexOf,
    Array.prototype.pop,
    Array.prototype.push,
    Array.prototype.reverse,
    Array.prototype.shift,
    Array.prototype.slice,
    Array.prototype.splice,
    Array.prototype.toSource,
    Array.prototype.toString,
    Array.prototype.unshift,
    Array.prototype.values,
    Map.prototype.constructor,
    Map.prototype.clear,
    Map.prototype.delete,
    Map.prototype.entries,
    Map.prototype.get,
    Map.prototype.has,
    Map.prototype.keys,
    Map.prototype.set,
    Map.prototype.values,
    Reflect.defineProperty,
    Reflect.deleteProperty,
    Reflect.enumerate,
    Reflect.get,
    Reflect.getOwnPropertyDescriptor,
    Reflect.getPrototypeOf,
    Reflect.has,
    Reflect.isExtensible,
    Reflect.ownKeys,
    Reflect.preventExtensions,
    Reflect.set,
    Reflect.setPrototypeOf,
    Proxy,
    JSON.parse,
    JSON.stringify,
    generatorFunction.prototype.return,
    generatorFunction.prototype.throw,
    //assert module
    assert,
    //Buffer
    Buffer.alloc,
    Buffer.allocUnsafe,
    Buffer.allocUnsafeSlow,
    Buffer.byteLength,
    Buffer.compare,
    Buffer.concat,
    Buffer.from,
    Buffer.isBuffer,
    Buffer.isEncoding,
    Buffer.prototype.compare,
    Buffer.prototype.copy,
    Buffer.prototype.entries,
    Buffer.prototype.equals,
    Buffer.prototype.fill,
    Buffer.prototype.includes,
    Buffer.prototype.indexOf,
    Buffer.prototype.keys,
    Buffer.prototype.lastIndexOf,
    Buffer.prototype.readBigInt64BE,
    Buffer.prototype.readBigInt64LE,
    Buffer.prototype.readBigUInt64BE,
    Buffer.prototype.readBigUInt64LE,
    Buffer.prototype.readDoubleBE,
    Buffer.prototype.readDoubleLE,
    Buffer.prototype.readFloatBE,
    Buffer.prototype.readFloatLE,
    Buffer.prototype.readInt8,
    Buffer.prototype.readInt16BE,
    Buffer.prototype.readInt16LE,
    Buffer.prototype.readInt32BE,
    Buffer.prototype.readInt32LE,
    Buffer.prototype.readIntBE,
    Buffer.prototype.readIntLE,
    Buffer.prototype.readUInt8,
    Buffer.prototype.readUInt16BE,
    Buffer.prototype.readUInt16LE,
    Buffer.prototype.readUInt32BE,
    Buffer.prototype.readUInt32LE,
    Buffer.prototype.readUIntBE,
    Buffer.prototype.readUIntLE,
    Buffer.prototype.subarray,
    Buffer.prototype.slice,
    Buffer.prototype.swap16,
    Buffer.prototype.swap32,
    Buffer.prototype.swap64,
    Buffer.prototype.toJSON,
    Buffer.prototype.toString,
    Buffer.prototype.values,
    Buffer.prototype.write,
    Buffer.prototype.writeBigInt64BE,
    Buffer.prototype.writeBigInt64LE,
    Buffer.prototype.writeBigUInt64BE,
    Buffer.prototype.writeBigUInt64LE,
    Buffer.prototype.writeDoubleBE,
    Buffer.prototype.writeDoubleLE,
    Buffer.prototype.writeFloatBE,
    Buffer.prototype.writeFloatLE,
    Buffer.prototype.writeInt8,
    Buffer.prototype.writeInt16BE,
    Buffer.prototype.writeInt16LE,
    Buffer.prototype.writeInt32BE,
    Buffer.prototype.writeInt32LE,
    Buffer.prototype.writeIntBE,
    Buffer.prototype.writeIntLE,
    Buffer.prototype.writeUInt8,
    Buffer.prototype.writeUInt16BE,
    Buffer.prototype.writeUInt16LE,
    Buffer.prototype.writeUInt32BE,
    Buffer.prototype.writeUInt32LE,
    Buffer.prototype.writeUIntBE,
    Buffer.prototype.writeUIntLE,
    Buffer.transcode,
    consoleMod.log,
    //Error
    Error.prototype.constructor,
    Error.captureStackTrace,
    RangeError.prototype.constructor,
    ReferenceError.prototype.constructor,
    SyntaxError.prototype.constructor,
    TypeError.prototype.constructor,
    //events
    EventEmitter.prototype.constructor,
    //Karousos classes
    karousosClasses.register.prototype.toString,
    karousosClasses.objectID.prototype.toString,
    karousosClasses.handlerID.prototype.toString,
    karousosClasses.eventID.prototype.toString,
    karousosClasses.register.prototype.toString,
    karousosClasses.unregister.prototype.toString,
    karousosClasses.unregisterAll.prototype.toString,
    karousosClasses.emit.prototype.toString,
    karousosClasses.stateOp.prototype.toString,
    karousosClasses.nonDetOp.prototype.toString,
    karousosClasses.checkEvents.prototype.toString,
])

exports.commonDetSyncCallToJsBuiltIn = commonDetSyncCallToJsBuiltIn

// The strings that correspond to constructors  
exports.constructor_strings = new Set([
    'Object.prototype.constructor',
    'Function.prototype.constructor',
    'Boolean.prototype.constructor',
    'Error.prototype.constructor',
    'EvalError.prototype.constructor',
    'RangeError.prototype.constructor',
    'ReferenceError.prototype.constructor',
    'SyntaxError.prototype.constructor',
    'TypeError.prototype.constructor',
    'URIError.prototype.constructor',
    'Number.prototype.constructor',
    'BigInt.prototype.constructor',
    'Date.prototype.constructor',
    'String.prototype.constructor',
    'RegExp.prototype.constructor',
    'Array.prototype.constructor',
    'Int8Array.prototype.constructor',
    'Uint8Array.prototype.constructor',
    'Uint8ClampedArray.prototype.constructor',
    'Int16Array.prototype.constructor',
    'Uint16Array.prototype.constructor',
    'Int32Array.prototype.constructor',
    'Uint32Array.prototype.constructor',
    'Float32Array.prototype.constructor',
    'Float64Array.prototype.constructor',
    'BigInt64Array.prototype.constructor',
    'BigUint64Array.prototype.constructor',
    'Map.prototype.constructor',
    'Set.prototype.constructor',
    'WeakMap.prototype.constructor',
    'WeakSet.prototype.constructor',
    'ArrayBuffer.prototype.constructor',
    'SharedArrayBuffer.prototype.constructor',
    'DataView.prototype.constructor',
    'consoleMod.Console.prototype.constructor',
    'crypto.Certificate.prototype.constructor',
    'dnsPromises.Resolver.prototype.constructor',
    'Error.prototype.constructor',
    'RangeError.prototype.constructor',
    'ReferenceError.prototype.constructor',
    'SyntaxError.prototype.constructor',
    'TypeError.prototype.constructor',
    'EventEmitter.prototype.constructor',
    'stream.Writable.prototype.constructor',
    'stream.Readable.prototype.constructor',
    'stream.Duplex.prototype.constructor',
    'stream.Transform.prototype.constructor',
    'stringdec.StringDecoder.prototype.constructor',
    'url.URL.prototype.constructor',
    'url.URLSearchParams.prototype.constructor',
    'util.TextEncoder.prototype.constructor',
    'vm.Script.prototype.constructor',
    'http.Agent.prototype.constructor',
])

/****** Functions that register/unregister/emit/inspect events ******/

// returns true if the input function is require
exports.isRequire = function(func) {
    return require.toString() == Function.prototype.toString.call(func)
}

// Functions that register a handler for an event
exports.registerFns = new Set([
    EventEmitter.prototype.on,
    EventEmitter.prototype.addListener,
    EventEmitter.prototype.prependListener,
    EventEmitter.prototype.once,
    EventEmitter.prototype.prependOnceListener,
    net.Socket.prototype.on,
    net.Socket.prototype.setTimeout,
    net.Server.prototype.on,
    stream.Duplex.prototype.on,
])

// Functions that register a handler for only one emit of the event
exports.registerOnceFns = new Set([
    EventEmitter.prototype.once,
    EventEmitter.prototype.prependOnceListener,
])

// Functions that unregister a handler for an event
exports.unregisterFns = new Set([
    EventEmitter.prototype.off,
    EventEmitter.prototype.removeAllListeners,
    EventEmitter.prototype.removeListener,
])

// Functions that unregister all handlers for an event
exports.unregisterAllTable = new Set([
    EventEmitter.prototype.removeAllListeners
])

// Functions that emit an event
exports.emitFns = new Set([
    EventEmitter.prototype.emit,
])

// Events.once function
exports.eventsOnceFns = new Set([
    once
])

// Functions that inspect the handlers associated with events
exports.inspectHandlersFns = new Set([
    EventEmitter.prototype.eventNames,
    EventEmitter.prototype.getMaxListeners,
    EventEmitter.prototype.listenerCount,
    EventEmitter.prototype.listeners,
    EventEmitter.prototype.setMaxListeners,
    EventEmitter.prototype.rawListeners,
])

/****** Functions that register/unregister/emit/inspect events ******/

// Functions that schedule a timer with no delay
exports.scheduleTimerNoDelayFns = new Set([
    process.nextTick,
    timers.setImmediate
])

// Functions that schedule a timer with delay
exports.scheduleTimerWithDelayFns = new Set([
    timers.setInterval,
    timers.setTimeout,
])

// Functions that schedule a timer with delay
exports.scheduleTimerFns = new Set([
    process.nextTick,
    timers.setImmediate,
    timers.setInterval,
    timers.setTimeout
])

// The functions that clear timers
exports.clearTimerFns = new Set([
    timers.clearImmediate,
    timers.clearInterval,
    timers.clearTimeout,
])

/****** Functions that iterate over an iterable syncrhonously ******/

exports.forEachTable = new Set([
    Array.prototype.every,
    Int8Array.prototype.every,
    Uint8Array.prototype.every,
    Uint8ClampedArray.prototype.every,
    Int16Array.prototype.every,
    Uint16Array.prototype.every,
    Int32Array.prototype.every,
    Uint32Array.prototype.every,
    Float32Array.prototype.every,
    Float64Array.prototype.every,
    BigInt64Array.prototype.every,
    BigUint64Array.prototype.every,
    Array.prototype.forEach,
    Int8Array.prototype.forEach,
    Uint8Array.prototype.forEach,
    Uint8ClampedArray.prototype.forEach,
    Int16Array.prototype.forEach,
    Uint16Array.prototype.forEach,
    Int32Array.prototype.forEach,
    Uint32Array.prototype.forEach,
    Float32Array.prototype.forEach,
    Float64Array.prototype.forEach,
    BigInt64Array.prototype.forEach,
    BigUint64Array.prototype.forEach,
    Map.prototype.forEach,
    Set.prototype.forEach,
    url.URLSearchParams.prototype.forEach,
    Array.prototype.filter,
    Int8Array.prototype.filter,
    Uint8Array.prototype.filter,
    Uint8ClampedArray.prototype.filter,
    Int16Array.prototype.filter,
    Uint16Array.prototype.filter,
    Int32Array.prototype.filter,
    Uint32Array.prototype.filter,
    Float32Array.prototype.filter,
    Float64Array.prototype.filter,
    BigInt64Array.prototype.filter,
    BigUint64Array.prototype.filter,
    Array.prototype.some,
    Int8Array.prototype.some,
    Uint8Array.prototype.some,
    Uint8ClampedArray.prototype.some,
    Int16Array.prototype.some,
    Uint16Array.prototype.some,
    Int32Array.prototype.some,
    Uint32Array.prototype.some,
    Float32Array.prototype.some,
    Float64Array.prototype.some,
    BigInt64Array.prototype.some,
    BigUint64Array.prototype.some,
    Array.prototype.reduce,
    Array.prototype.reduceRight,
    Int8Array.prototype.reduce,
    Int8Array.prototype.reduceRight,
    Uint8Array.prototype.reduce,
    Uint8Array.prototype.reduceRight,
    Uint8ClampedArray.prototype.reduce,
    Uint8ClampedArray.prototype.reduceRight,
    Int16Array.prototype.reduce,
    Int16Array.prototype.reduceRight,
    Uint16Array.prototype.reduce,
    Uint16Array.prototype.reduceRight,
    Int32Array.prototype.reduce,
    Int32Array.prototype.reduceRight,
    Uint32Array.prototype.reduce,
    Uint32Array.prototype.reduceRight,
    Float32Array.prototype.reduce,
    Float32Array.prototype.reduceRight,
    Float64Array.prototype.reduce,
    Float64Array.prototype.reduceRight,
    BigInt64Array.prototype.reduce,
    BigInt64Array.prototype.reduceRight,
    BigUint64Array.prototype.reduce,
    BigUint64Array.prototype.reduceRight,
    Array.prototype.map,
    Int8Array.prototype.map,
    Uint8Array.prototype.map,
    Uint8ClampedArray.prototype.map,
    Int16Array.prototype.map,
    Uint16Array.prototype.map,
    Int32Array.prototype.map,
    Uint32Array.prototype.map,
    Float32Array.prototype.map,
    Float64Array.prototype.map,
    BigInt64Array.prototype.map,
    BigUint64Array.prototype.map,
    Array.prototype.sort,
    Array.prototype.find,
    Array.prototype.flatMap,
    Array.prototype.findIndex,
])

/***** Check if this is a method of assert reject or throw *****/
exports.assertRejectOrThrow = new Set([
    assert.doesNotReject,
    assertStrict.doesNotReject,
    assert.doesNotThrow,
    assertStrict.doesNotThrow,
    assert.rejects,
    assert.throws,
    assertStrict.throws
])

exports.objectKeys = new Set([
    Object.keys
])

// Check if the event is an internal event
exports.isInternalEvent = function(fn, emitter, evt) {
    return evt == 'unhandledRejection' ||
        fn == net.Socket.prototype.setTimeout ||
        (emitter instanceof fs.ReadStream && ['close', 'open', 'ready'].includes(evt)) ||
        (emitter instanceof fs.WriteStream && ['close', 'open', 'ready'].includes(evt)) || ['error', 'newListener', 'removeListener'].includes(evt) ||
        (
            emitter instanceof rl.Interface && ['close', 'line', 'pause', 'resume', 'SIGCONT', 'SIGINT', 'SIGSTP', ].includes(evt)
        ) ||
        (emitter instanceof repl.REPLServer && ['exit', 'reset'].includes(evt)) ||
        (
            emitter instanceof stream.Writable && ['close', 'drain', 'error', 'finish', 'pipe', 'unpipe'].includes(evt)
        ) ||
        (
            emitter instanceof stream.Readable && ['close', 'data', 'end', 'error', 'pause', 'readable', 'resume'].includes(evt)
        ) ||
        (emitter instanceof tty.WriteStream && ['resize'].includes(evt)) ||
        (
            emitter instanceof net.Socket && ['close', 'connect', 'data', 'drain', 'end', 'error', 'lookup', 'ready', 'timeout'].includes(evt)
        ) ||
        (
            emitter instanceof net.Server && ['close', 'connection', 'error', 'listening'].includes(evt)
        ) ||
        (
            emitter instanceof childProcess.ChildProcess && ['close', 'disconnect', 'error', 'exit', 'message'].includes(evt)
        ) ||
        (
            emitter instanceof http.ClientRequest && ['abort', 'connect', 'continue', 'information', 'socket', 'response', 'timeout', 'upgrade'].includes(evt)
        ) ||
        (emitter instanceof stream.Duplex && ['close'].includes(evt)) ||
        (
            emitter instanceof http.ClientRequest && ['abort', 'response', 'connect', 'continue', 'information', 'socket', 'timeout', 'upgrade'].includes(evt)
        )

}

// Check if the input is a native js promise
exports.isNativePromise = function(x) {
    return x instanceof Promise;
}

// Checks if the given object is a js primitive
function isPrimitiveType(x) {
    return isOfType(x, Boolean, 'boolean') ||
        isOfType(x, Number, 'number') ||
        isOfType(x, BigInt, 'bigint') ||
        isOfType(x, String, 'string') ||
        isOfType(x, Symbol, 'symbol') ||
        (isOfType(x, Array, 'array') && isPrimitiveType(x[0])) ||
        isOfType(x, Date, 'date') ||
        x == null ||
        typeof(x) == "undefined"
}

exports.isPrimitiveType = isPrimitiveType;

// Checks if x is of type instance or typeof(x) is t
function isOfType(x, instance, t) {
    return x instanceof instance || typeof(x) === t
}

exports.isOfType = isOfType;

//******************//
//******EXPRESS*****//
//******************//

// Express functions are treated as native functions of JS
// Functions that are calls to express with no arguments
const callsToExpressNoArguments = new Set([
    express,
    express.Router,
    express.text,
    express.application.route,
    express.response.append,
    express.response.end,
    express.response.format,
    express.response.get,
    express.response.json,
    express.response.jsonp,
    express.response.links,
    express.response.location,
    express.response.redirect,
    express.response.render,
    express.response.send,
    express.response.sendFile,
    express.response.sendStatus,
    express.response.set,
    express.response.status,
    express.response.type,
    express.Router.use,
    express.Router.route,
    express.application.enable,
    express.application.set,
    express.application.disable,
    express.request.get,
])

// Non supported calls to express
const callsToExpressNotSupported = new Set([
    express.raw,
    express.text,
    express.application.engine,
    express.application.disabled,
    express.application.enabled,
    express.application.param,
    express.application.path,
    express.application.render,
    express.request.accepts,
    express.request.acceptsCharsets,
    express.request.acceptsEncodings,
    express.request.acceptsLanguages,
    express.request.is,
    express.request.param,
    express.request.range,
    express.response.attachment,
    express.response.cookie,
    express.response.clearCookie,
    express.response.download,
])

// Functions that route the request in express
const routingFns = new Set([
    express.application.get,
    express.application.checkout,
    express.application.copy,
    express.application.delete,
    express.application.head,
    express.application.lock,
    express.application.merge,
    express.application.mkactivity,
    express.application.mkcol,
    express.application.move,
    express.application['m-search'],
    express.application.notify,
    express.application.options,
    express.application.patch,
    express.application.post,
    express.application.purge,
    express.application.put,
    express.application.report,
    express.application.search,
    express.application.subscribe,
    express.application.trace,
    express.application.unlock,
    express.application.unsubscribe,
    express.application.all,
    express.application.use,
    express.Router.get,
    express.Router.checkout,
    express.Router.copy,
    express.Router.delete,
    express.Router.head,
    express.Router.lock,
    express.Router.merge,
    express.Router.mkactivity,
    express.Router.mkcol,
    express.Router.move,
    express.Router['m-search'],
    express.Router.notify,
    express.Router.options,
    express.Router.patch,
    express.Router.post,
    express.Router.purge,
    express.Router.put,
    express.Router.report,
    express.Router.search,
    express.Router.subscribe,
    express.Router.trace,
    express.Router.unlock,
    express.Router.unsubscribe,
    express.Router.all,
    express.Router.use,
    express.Router.param,
])

// use this to check if this function express.static 
var isStatic = -2;
exports.isStatic = isStatic;

function callsToExpressSend(fn) {
    return fn == express.response.send;
}

exports.callsToExpressSend = callsToExpressSend;

// checks if it is a call to express and if so returns the 
// indexes of the callbackFunctions
function isCallToExpressMethod(fn, args) {
    if (routingFns.has(fn) && args.length > 1 && isOfType(args[1], Function, 'function')) {
        if (args.length == 2) {
            return [1]
        } else {
            assert(args.length == 3 && [express.Router.post, express.Router.get].includes(fn))
            return [1, 2]
        }
    }
    if (fn == express.static) {
        if (args.length == 1 || !(args[1].setHeaders)) {
            return []
        }
        return [-2] //SPECIAL return for static
    }
    //all these take an option argument with verify a function
    if ([express.json, express.urlencoded].includes(fn)) {
        assert(!(args[0].verify));
        return [];
    }
    if (fn == express.application.use && args.length == 1) {
        return [0]
    }
    if (callsToExpressNotSupported.has(fn)) {
        console.log('fn is')
        console.trace()
        throw new Error('Called not supported express');
    }
    if (callsToExpressNoArguments.has(fn)) {
        return [];
    }
    return -1;
}

exports.isCallToExpressMethod = isCallToExpressMethod;